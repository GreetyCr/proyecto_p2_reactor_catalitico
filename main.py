#!/usr/bin/env python3
"""
Script principal de simulaci√≥n de transferencia de masa en reactor catal√≠tico.

Proyecto Personal 2 - Fen√≥menos de Transferencia
Autor: Adri√°n Vargas Tijerino (C18332)
Fecha: 2025-10-28
"""

import logging
from pathlib import Path
from datetime import datetime


def configurar_logging():
    """Configura el sistema de logging del proyecto."""
    log_dir = Path("logs")
    log_dir.mkdir(exist_ok=True)
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s | %(levelname)-8s | %(name)s | %(message)s',
        handlers=[
            logging.FileHandler(log_dir / f"simulacion_{timestamp}.log"),
            logging.StreamHandler()
        ]
    )
    
    return logging.getLogger(__name__)


def main():
    """Funci√≥n principal de ejecuci√≥n."""
    logger = configurar_logging()
    
    logger.info("="*70)
    logger.info("PROYECTO 2: SIMULACI√ìN TRANSFERENCIA DE MASA")
    logger.info("Reactor Catal√≠tico con Defecto")
    logger.info("="*70)
    
    # TODO: Implementar flujo de simulaci√≥n completo
    # 1. Cargar par√°metros
    # 2. Generar malla
    # 3. Inicializar solver
    # 4. Ejecutar simulaci√≥n
    # 5. Post-procesamiento
    # 6. Visualizaci√≥n
    
    logger.info("‚ö†Ô∏è  Simulaci√≥n a√∫n no implementada")
    logger.info("üìã Siguiente paso: Implementar m√≥dulos seg√∫n TDD")
    logger.info("")
    logger.info("Estado del proyecto:")
    logger.info("  ‚úÖ Setup inicial completado")
    logger.info("  ‚úÖ Estructura de carpetas creada")
    logger.info("  ‚úÖ Documentaci√≥n base lista")
    logger.info("  ‚è≥ Implementaci√≥n de solver pendiente")
    logger.info("")
    logger.info("Ver README.md para instrucciones de desarrollo")
    logger.info("="*70)


if __name__ == "__main__":
    main()

